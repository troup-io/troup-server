datasource db {
    provider = "postgresql"
    url = "***"
}

generator client {
    provider = "prisma-client-js"
}

model Team {
    id          Int       @default(autoincrement()) @id
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    maxMembers  Int       @default(25)
    name        String    @unique
    displayName String?
    adminEmail  String?
    owner       User      @relation("_UserOwnerOfTeams", fields: [ownerId])
    ownerId     Int
    members     User[]
    labels      Label[]
    projects    Project[]
    tickets     Ticket[]
}

model User {
    id          Int         @default(autoincrement()) @id
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    email       String      @unique
    password    String
    profile     UserProfile
    memberTeams Team[]
    ownerTeams  Team[]      @relation("_UserOwnerOfTeams")
    projects    Project[]   @relation(references: [id])
    tickets     Ticket[]
}

model UserProfile {
    id                     Int      @default(autoincrement()) @id
    createdAt              DateTime @default(now())
    updatedAt              DateTime @updatedAt
    firstName              String
    lastName               String
    isSuperAdmin           Boolean  @default(false)
    professionalCompetence String?
    utm_source             String?
    utm_campaign           String?
    utm_medium             String?
    utm_term               String?
    utm_content            String?
    user                   User     @relation(fields: [userId], references: [id])
    userId                 Int
}

model Project {
    id        Int      @default(autoincrement()) @id
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    uid       String   @unique
    sequence  Int
    name      String
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    Int
    tickets   Ticket[]
    members   User[]
    labels    Label[]
}

model Ticket {
    id        Int      @default(autoincrement()) @id
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    uid       String   @unique
    sequence  Int
    title     String
    body      String
    team      Team     @relation(fields: [teamId], references: [id])
    teamId    Int
    author    User     @relation(fields: [authorId], references: [id])
    authorId  Int
    project   Project  @relation(fields: [projectId], references: [id])
    projectId Int
    labels    Label[]  @relation(references: [id])
}

// Supporting models
model Label {
    id         Int      @default(autoincrement()) @id
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
    value      String
    isGlobal   Boolean? @default(false)
    background String
    foreground String?  @default("#222222")
    team       Team     @relation(fields: [teamId], references: [id])
    teamId     Int
    project    Project? @relation(fields: [projectId], references: [id])
    projectId  Int?
    tickets    Ticket[] @relation(references: [id])
}
